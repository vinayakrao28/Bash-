cut -f12,94,107 200605250_v7_Non-Filtered_2020-06-24_13\:31\:10-oncomine.tsv > aa.txt
ls | grep -i E746_A750del aa.txt > EGFR.txt
awk 'NR == 1 {print $3}' EGFR.txt > EGFR1.txt
awk '{for(i=1;i<=NF;++i){n=match($i,/[0-9]+(\.[0-9]+)?/);printf n?"%g ":"%s ",n?$i*100:$i} printf"\n"}' EGFR1.txt > EGFR2.txt

#######################################################################################################################################3

ls | grep -i R249S aa.txt > TP53.txt
awk 'NR == 1 {print $3}' TP53.txt > TP531.txt
awk '{for(i=1;i<=NF;++i){n=match($i,/[0-9]+(\.[0-9]+)?/);printf n?"%g ":"%s ",n?$i*100:$i} printf"\n"}' TP531.txt > TP532.txt

sed -i '1s/^/\nSUMMARY OF THE miRPV PIPELINE: \n\n /' Sum.txt

awk 'BEGIN{OFS="\t"}{$47 = "ADADSDA"; print}' tail.xls > aa.xls #change column containt

##########################################################################################################################################
#GTF script
awk '$3 == "CDS" {print}'
awk '{a=$5-$4;print $0,a;}' (Sub columns)
awk 'BEGIN {OFS="\t"}; {print $2 - $5}' (Sub column)
tr "\r" "\n" < aa.xls > aa_new.xls
awk 'NF' aa_new.xls > aa_new2.xls
paste aa_new2.xls start.xls


###########################Codons #############################################################
 cut -f1 Codons.txt | grep -wf - uncovered_Exon_Codons_final.vcf
paste file1 file2 > out.vcf

######################BAM Merge############################
samtools view -H 210810675_BRCA_gDNA.bam  | sed "s/SM:[^\t]*/SM:123456789/g" | samtools reheader - 210810675_BRCA_gDNA.bam > test_SM.bam #To rename the sample ID 
samtools view -H $name.sorted.bam| sed 's/ID:i/ID:$name/'|samtools reheader - $name.sorted.bam > $name.sorted_rh.bam

####################Ingenuity##########################################

cut -f1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,57,65,66,67,68,69,70,71 =53

awk '{print $0 >> $1"file.bed"}' file.sorted.bed

sort -k1,1 -k2n,2 CCP.20131001.designed.bed -o file.sorted.bed

#########################################Samulated Ingenuity############################
cut -f1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,56,64,65,66,67,68,69,70,71 Chr_10_Intersect.vcf > Chr10_Only_Colum.bed

csplit -f foo -s -z hg19.fasta '/>/' '{*}' ####fasta file split command

grep -v '>' foo24 | sed -e 's/\(.\)/&\n/g' | grep -v "^$" | sed 's/^/chrM /' | nl | awk '{print $2, $1, $3}' | sed 's/ \+/\t/g' > bb.bed



#####################################GNOMAD########################################################

paste -d ' ' Only_4_Columns.txt Afr_AC_AN.txt | sed 's/ \+/\t/g' | awk '{sub(/0/, "1", $7)}1'   || paste -d ' ' AC_sas.txt AN_sas.txt | sed 's/;AN_sas=//g' | sed 's/;AC_sas=//g' | awk '{sub(/0/, "1", $2)}1' | awk '{a=($1/$2)*100;print $0,a;}' | sed 's/ \+/\t/g' | sed 's/100/1/g' > Combined_AC_AN_sas.txt

awk '{a=($6/$7)*100;print $0,a;}' Final_AFR_Combined.txt | sed 's/ \+/\t/g

##########for nfe and fin
cut -f8 Combined_AN_AC_fin.txt > column_8fin_Combined_AN_AC_fin.txt
cut -f8 Combined_AN_AC_nfe.txt > column_8nfe_Combined_AN_AC_nfe.txt
paste -d ' ' column_8fin_Combined_AN_AC_fin.txt column_8nfe_Combined_AN_AC_nfe.txt | sed 's/ \+/\t/g' | awk '{a=($1+$2)/2;print $0,a;}' | sed 's/ \+/\t/g' | cut -f3 > Average_fin_nfe.txt
cut -f6,7 Combined_AN_AC_fin.txt > 6th_7th_Combined_AN_AC_fin.txt
cut -f6,7 Combined_AN_AC_nfe.txt > 6th_7th_Combined_AN_AC_nfe.txt

awk 'BEGIN {FS="\t"; OFS="\t"}; {print $1 "_" $2 "_" $4 "_" $5}' With_Chr_Genome_chr22_gnomAD.txt
paste -d ' ' Concate_Column.txt With_Chr_Genome_chr22_gnomAD.txt | sed 's/ \+/\t/g' > Final_Genome_chr22_gnomAD.txt

##########For nfe and fin

paste -d ' ' AC_fin.txt AN_fin.txt AC_nfe.txt AN_nfe.txt | sed 's/ \+/\t/g' | sed 's/;AC_nfe=//g' | sed 's/;AN_nfe=//g' | sed 's/;AC_fin=//g' | sed 's/;AN_fin=//g' | awk '{sub(/0/, "1", $2)}1' | awk '{sub(/0/, "1", $4)}1' | awk '{a=($1/$2)*100;print $0,a;}' | sed 's/ \+/\t/g'| awk '{a=($3/$4)*100;print $0,a;}' | sed 's/ \+/\t/g' | awk '{a=($5+$6)/2;print $0,a;}' | sed 's/ \+/\t/g' > Average_Combined_AC_AN_fin_nfe.txt

grep -v "GENE.*\_.*STRAND" CosmicCodingMuts.vcf 

#############comparing Exome and Genome
paste -d ' ' Intersect-Exome-Genome.txt Exome.txt | cut -f1,2,3,4,5,6,7,8,9,10,11,18,19,20,21,22 | sed 's/ \+/\t/g' | head
awk '{if ($7>=0) print ($7+$13)/2;else print $13}'
awk '{if ($7>0) print ($7+$12)/2;else print $12}' Final_Exome_Genome_Combined.txt

###################fastq and BAM file conversion #########################
samtools view -H Original_file > $1.header.sam
samtools bam2fq SAMPLE.bam > Output.fastq
bwa mem -M -R "@RG\\tID:IonCode_0264\\tLB:BRCA\\tPL:IonTorrent\\tPM:IonProton\\tSM:211114699_BRCA_gDNA" hg19.fasta 211114699_BRCA_gDNA.fastq > Alligned_211114699_BRCA_gDNA.sam
samtools view -S -b Alligned_211114699_BRCA_gDNA.sam > Alligned_211114699_BRCA_gDNA.bam
samtools merge -l1 -@8 Alligned_211114699_BRCA_gDNA_header.sam Alligned_211114699_BRCA_gDNA.bam -h header.sam
java -jar ~/Downloads/picard/picard.jar AddOrReplaceReadGroups I=211114699_BRCA_gDNA.bam O=211114699_BRCA_gDNA_Replaced_RG.bam RGID=IonCode_0111 RGLB=IONTORRENT RGPL=IONTORRENT RGPU=s5/550/Q1VA01/08/DAHE01384/IonCode_0111 RGSM=211114699


################# MISC #######################
Bhavana IP : bhavavna@192.168.150.8 Pass: Br@@1234
nikita@192.168.150.12:
duhita@192.168.150.13:

sudo find 2107** -type f -and -name "*bam" -delete

find "/results/Standalone_variant_calling/*OCAv3*/" -type f -iname 'alleles.xls' -exec sh -c 'path="${1%/*}"; filename="${1##*/}"; cp -nv "${1}" "/results/Standalone_variant_calling/Test/${path##*/}.${filename}" ' sh_cp {} \; 

######################
sed 's/\(.\)[^ ]* */\1/g' #Print first letter of the word

grep -wFf <(sed 's/\r$//' file1.txt) file2.txt ##### TO GREP WITHIN TWO FILE
###############SERVER COMMANDS#############################
qstat -f
sudo qmod -c plugin.q
sudo reboot now
ps -aux | grep samtool #grep some process from running server

########################## Samtools #######################


samtools view -hb -L To_Exclude.bed -U Out_With_Excludes.bam Input.bam > Overlapping.bam



